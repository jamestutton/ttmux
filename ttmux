#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    TARGET="$(readlink "$SOURCE")"
    if [[ $SOURCE == /* ]]; then
        SOURCE="$TARGET"
    else
        ttmux="$( dirname "$SOURCE" )"
        SOURCE="$ttmux/$TARGET"
    fi
done
RDIR="$( dirname "$SOURCE" )"
ttmux="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

. $ttmux/"lib/colors"
. $ttmux/"lib/utils"

ttmux_header
ensure_tmux_is_installed

argument=$1
# todo: convert this into a switch statement
if [[ $1 == "-l" ]]; then
    show_ttmux_files
    exit
fi
if [[ $1 == "-h" ]]; then
    show_ttmux_help
    exit
fi

if [ -f "$1" ]; then
    echo "${information}Configuration sent via parameters${reset}"
    . "$1"
else
    echo "${information}Retrieving local information ...${reset}"
    if [[ -n $(ls *.ttmux) ]]; then
        echo "${information}Configuration files found${reset}"
        found=$(ls -l *.ttmux|wc -l)
    else
        echo "${alert}No configuration available in folder $PWD${reset}"
        exit
    fi

    configurationLoaded=0
    if [ $found == 1 ]; then
        filename=$(ls *.ttmux)
        if [ -f "$filename" ]; then
            . $filename
            ensure_configuration_file_is_ok
            configurationLoaded=1
        fi
    fi

    if [ $configurationLoaded == 0 ]; then
        echo "${information}Select your configuration file here${reset}"
        select filename in `ls *.ttmux`
        do
            echo $filename
            if [ -f "$filename" ]; then
                echo ""
                echo "Loading $filename file"
                . $filename
                ensure_configuration_file_is_ok
                break
            else
                echo ""
                echo "Invalid selection"
            fi
        done
    fi
fi


tmux start-server
start=1
windownumber=$start
if [ -z "$order" ]; then windows=${!window_list[@]}; else windows=${order[@]}; fi
for window in $windows; do
    name=${window}
    keys=${window_list[$window]}
    if [ $((windownumber)) == $start ]; then
        tmux new-session -d -s "${session_name}" -n "${name}"
    else
        tmux new-window -t"${session_name}":$windownumber -n "${name}"
    fi

    tmux send-keys -t"${session_name}":$windownumber "${keys}" C-m

    if [ -n "${vertical_panes[$name]+1}" ]; then
        pane_command=${pane_command[$name]}
        command_position=${command_position[$name]}
        tmux splitw -h -p 40 -t"${session_name}":$windownumber
        tmux send-keys -t"${session_name}":"${windownumber}.${command_position}" "${pane_command}" C-m
    fi

    if [ -n "${horizontal_panes[$name]+1}" ]; then
        tmux select-pane -L
        horizontal_panes_command=${horizontal_panes_command[$name]}
        horizontal_command_position=${horizontal_command_position[$name]}
        tmux splitw -v -p 50 -t"${session_name}":$windownumber
        tmux send-keys -t"${session_name}":"${windownumber}.${horizontal_command_position}" "${horizontal_panes_command}" C-m
    fi

    ((windownumber++))
done
tmux select-window -t"${session_name}":$start
tmux attach-session -d -t"${session_name}"
